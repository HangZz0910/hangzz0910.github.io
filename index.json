[{"content":"我为什么想搭建博客 我也不知道嘿嘿，用Southernwood小朋友的话来说就是“装逼！”\n其实很早之前就有想搭自己博客的打算，虽然我不是一个很爱用文字来记录的人，但是互联网总归来说是有记忆的，传至互联网的数据有时候回想起来可能也是一种美好的回忆吧。\n除此之外呢，就是室友都在搭建博客，而且之后准备打一下服务外包的比赛，在其中应该能积累一些项目经验和一些技术吧，到时候也可以写成个人博客让互联网帮我记忆😋😋\n重启博客计划 在我搭建博客之前，我根本不知道我需要哪些技术，或是说要使用到什么技术，然后得知可以采用hugo或者hexo框架来搭建，但是依然是Southernwood小朋友跟我说的，很多人从hexo框架转成了hugo框架，虽然我也不知道是什么原因，那我也就啥也不想了，直接从hugo入手了。\n一开始跟着B站上的CodeSheep的视频搭建（后续在我搭建辛酸过程中还会讲到），然后想切换成Stack主题，但是Stack主题好像很多东西要自己来修改，我也只是个屁也不懂的菜狗，我改不来，然后就开始放弃了，很久一段时间就没再管博客这件事。直到10月30日这天，当天十分头晕带着点头痛，我就不想学习，但是又不想浪费时间，于是乎决定重启我的博客计划。\n我又重新在hugo官方网站上面找新的theme，由于个人比较喜欢简约一点的主题，看到了papermod这种极简式风格的主题，就决定采用此主题了。有了主题之后就是考虑是采用GitHub代理还是租个服务器和域名挂到服务器上，最后刚好赶上了阿里云在云栖大会上提出的天工开物高校计划，可以领取300元无门槛的代金券，我拿着代金券租了6个月的轻量应用服务器，后续应该还会继续续租，并买了我很喜欢的域名hangzz.cn。但是因为域名备案需要半个月左右时间，在我域名备案好之前，是采用GitHub代理的，现在你所看到的已经是域名备案好挂在阿里云服务器上的。下面我会先讲采用GitHub代理，后续再讲挂到个人阿里云服务器上，其中可能会少了某些步骤，因为我也有点忘了👉👈如果遇到问题了，请个人搜索互联网，通过互联网都能解决问题。\n我的hugo框架博客搭建过程 下面我以Windows系统为例展示\n1.安装hugo 首先到hugo官网下载相应版本\n下载完成后检查是否安装成功，在cmd内输入hugo version，若出现版本信息则表示安装成功。 2.新建站点 找一个合适的文件夹，输入hugo new site myblog,(此处的myblog可以更改为你想要的文件名),就会在myblog文件夹内出现如下目录结构 3.下载主题 先去hugo官方网站上面找到你心仪的主题，然后点击Download就会跳转到相对应主题的github仓库。\n可以采用git clone的方式，将github仓库上的内容下载下来可以省去压缩包解压缩的过程。（如果要采用git clone的方式，就需要将）\n首先输入cd myblog以及cd themes将终端路径调整到博客文件夹的themes目录下，由于我的主题为PaperMod，输入git clone https://github.com/adityatelange/hugo-PaperMod.git ，然后themes文件夹下面便会出现如下目录：\n若想使用该主题的方法就是在站点文件夹的config配置文件中输入主题的名字\n1 theme: PaperMod # 主题名字，与themes文件夹下相一致 4.配置文件 站点配置文件采用.yaml后缀的写法，看说法是更适合阅读，由于我也是copy来的，也不大懂，详细可看hugo官方文档，下面是我的config.yaml的配置\nbaseURL: \u0026#34;https://www.hangzz.cn/\u0026#34; # 绑定的域名 languageCode: zh-cn # en-us title: 杭の小屋 theme: PaperMod # 主题名字，和themes文件夹下的一致 enableInlineShortcodes: true enableEmoji: true # 允许使用 Emoji 表情，建议 true enableRobotsTXT: true # 允许爬虫抓取到搜索引擎，建议 true hasCJKLanguage: true # 自动检测是否包含 中文日文韩文 如果文章中使用了很多中文引号的话可以开启 buildDrafts: false buildFuture: false buildExpired: false googleAnalytics: # 谷歌统计 # Copyright: Sulv paginate: 5 # 首页每页显示的文章数 summaryLength: 140 # 文章概览的自字数，默认70 minify: disableXML: true # minifyOutput: true permalinks: # 访问博客时网址的显示形式 post: \u0026#34;/:title/\u0026#34; # post: \u0026#34;/:year/:month/:day/:title/\u0026#34; defaultContentLanguage: zh # 最顶部首先展示的语言页面 defaultContentLanguageInSubdir: false menu: main: - identifier: search name: 🔍 搜索 url: search weight: 1 - identifier: home name: 🏠 主页 url: / weight: 2 - identifier: posts name: 📚 文章 url: posts weight: 3 - identifier: tags name: 🧩 标签 url: tags weight: 15 - identifier: archives name: ⏱️ 时间轴 url: archives/ weight: 20 - identifier: about name: 🙋🏻‍♂️ 关于 url: about weight: 50 - identifier: links name: 🤝 友链 url: links weight: 60 outputs: home: - HTML - RSS - JSON # 这里的参数会被代码以 .Site.Params 的形式读取 params: env: production # to enable google analytics, opengraph, twitter-cards and schema. description: \u0026#34;\u0026#34; author: Hang # author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] # multiple authors defaultTheme: dark # defaultTheme: light or dark disableThemeToggle: false DateFormat: \u0026#34;2006-01-02\u0026#34; ShowShareButtons: true ShowReadingTime: true # disableSpecialistPost: true displayFullLangName: true ShowPostNavLinks: true ShowBreadCrumbs: true ShowCodeCopyButtons: true hideFooter: false # 隐藏页脚 ShowWordCounts: true VisitCount: true ShowLastMod: true #显示文章更新时间 ShowToc: true # 显示目录 TocOpen: true # 自动展开目录 extendCodeBackground: false # 代码块是否自动横向展开 comments: true profileMode: enabled: true title: 杭の小屋 # subtitle: # subtitle: \u0026#34;\u0026#34; imageUrl: \u0026#34;/img/H.jpg\u0026#34; imageTitle: imageWidth: 150 imageHeight: 150 buttons: - name: 🧱 建站 url: posts/blog - name: 👨🏻‍💻 技术 url: posts/tech # - name: 📕 阅读 # url: posts/read - name: 🏖 生活 url: posts/life socialIcons: - name: github url: \u0026#34;https://github.com/HangZz0910\u0026#34; # - name: twitter # url: \u0026#34;img/twitter.png\u0026#34; # - name: facebook # url: \u0026#34;https://www.facebook.com/profile.php?id=100027782410997\u0026#34; # - name: instagram # url: \u0026#34;img/instagram.png\u0026#34; # - name: QQ # url: \u0026#34;img/qq.png\u0026#34; # - name: WeChat # url: \u0026#34;img/wechat.png\u0026#34; # - name: bilibili # url: \u0026#34;https://space.bilibili.com/234461224\u0026#34; # - name: email # url: \u0026#34;mailto:202203151103@zjut.edu.cn\u0026#34; # - name: RSS # url: \u0026#34;index.xml\u0026#34; label: # 左上角图标 text: \u0026#34;Hang\u0026#39;s Blog\u0026#34; icon: \u0026#34;/img/H.jpg\u0026#34; iconHeight: 40 analytics: google: SiteVerificationTag: \u0026#34;\u0026#34; assets: favicon: \u0026#34;/img/H.jpg\u0026#34; favicon16x16: \u0026#34;/img/H.jpg\u0026#34; favicon32x32: \u0026#34;/img/H.jpg\u0026#34; apple_touch_icon: \u0026#34;/img/H.jpg\u0026#34; safari_pinned_tab: \u0026#34;/img/H.jpg\u0026#34; disableFingerprinting: true # 禁用指纹 cover: hidden: false # hide everywhere but not in structured data hiddenInList: false # hide on list pages and home hiddenInSingle: false # hide on single page fuseOpts: # 搜索配置 isCaseSensitive: false shouldSort: true location: 0 distance: 1000 threshold: 0.4 minMatchCharLength: 0 keys: [\u0026#34;title\u0026#34;, \u0026#34;permalink\u0026#34;, \u0026#34;summary\u0026#34;] StartYear: 2023 # 底部开始年份 FilingNo: 浙ICP备2023039216号-1 # 底部备案号 # PublicSecurityIconLink: 填自己的公安图标链接 # 填自己的公安图标链接,可用绝对路径，相对路径如 img/beian.png # PublicNetworkSecurity: 填自己的公网安备 # 底部公网安备号 Reward: false #打赏是否开启 # 打赏微信图片地址， # 可用绝对和相对地址，相对地址的图片需放在static/img下， # 填写格式为img/wechat_pay.png # WechatPay: img/wechat_pay.png # Alipay: img/alipay.png #打赏支付宝图片地址 # twikoo评论 twikoo: version: 1.6.22 # 填写twikoo版本号 id: https://twikoo-api-rho-virid.vercel.app/ # 填写自己的twikoo id region: # 环境地域，默认为 ap-shanghai，如果您的环境地域不是上海，需传此参数，请看twikoo官方文档 taxonomies: category: categories tag: tags series: series markup: goldmark: renderer: unsafe: true # HUGO 默认转义 Markdown 文件中的 HTML 代码，如需开启的话 highlight: # anchorLineNos: true codeFences: true guessSyntax: true # lineNos: true noClasses: true tabWidth: 4 style: monokai # codeFences：代码围栏功能，这个功能一般都要设为 true 的，不然很难看，就是干巴巴的-代码文字，没有颜色。 guessSyntax: true #猜测语法，这个功能建议设置为 true, 如果你没有设置要显示的语言则会自动匹配。 # hl_Lines：高亮的行号，一般这个不设置，因为每个代码块我们可能希望让高亮的地方不一样。 lineNoStart: 1 #行号从编号几开始，一般从 1 开始。 lineNos: 1 #：是否显示行号，我比较喜欢显示，所以我设置的为 true. # lineNumbersInTable：使用表来格式化行号和代码,而不是 标签。这个属性一般设置为 true. # noClasses：使用 class 标签，而不是内嵌的内联样式 privacy: vimeo: disabled: false simple: true twitter: disabled: false enableDNT: true simple: true instagram: disabled: false simple: true youtube: disabled: false privacyEnhanced: true services: instagram: disableInlineCSS: true twitter: disableInlineCSS: true 5.写文章 输入hugo new 文章名称.md就会在content目录下生成“文章名称.md”名字的文件，所有文章都会放在content文件夹中，可以采用各类markdown编辑器进行编辑。\n6.启动博客 终端路径调整至 myblog文件夹下输入hugo server后就可以在本地进行预览，本地预览地址为localhost:1313。如果顺利的话，你已经可以看到自己本地的博客了，由于距离我建站已经有一段时间了，详细的忘得差不多了，如果碰到什么问题的话，希望都能通过互联网来解决。\n7.将博客部署到github上 这部分需要使用到一个叫做github page的东西，是GitHub提供的一个网页寄存服务，可以寄存静态页面，这个特性就特别适合博客的搭建。\n首先再Github上创建一个 Repository，命名为Github名字，譬如我github用户名为hangzz0910，那么仓库名就为hangzz0910.github.io，这样就可以生成一个用户页面\n在hugo server调试页面完成后，使用命令hugo生成hugo静态页面，在执行命令后，会出现一个public文件夹，这就是网站的静态页面文件\n进入public文件夹，使用git上传文件\n1 2 3 4 5 6 cd public git init ##初始化仓库 git remote add origin https://github.com/HangZz0910/hangzz0910.github.io.git ##链接远程仓库 git add . git commit -m \u0026#34;first commit\u0026#34; git push -u origin master 在此之后更新文章，使用hugo生成新的静态页面，并使用git push进行同步\n1 2 3 4 5 cd public git add . git status git commit -m \u0026#34;add blog post\u0026#34; git push 提示：commit -m后面的东西是此次提交的备注，通常用来说明提交人的名字\n如果顺利的话，现在输入用户名.github.io就可以进行访问，但是由于github服务器架设在国外，直接访问速度会比较慢，这也就是我采用租赁国内云服务器的原因之一。\n8.将博客部署到阿里云服务器 ①前置条件 购买服务器和个人喜欢的域名，服务器可以看一下阿里云的天工开物高校计划，可以领取300元无门槛的代金券，还是十分划算的，我的域名是29一年，算下来的话其实成本并不高。\n如果hugo博客部署到GitHub那么不需要备案，因为GitHub属于国外服务器，但是用大陆的服务器就需要进行备案，备案可以看各自域名备案流程，我在阿里云备案大概花了十天左右时间，其中就只是阿里云客服打过一次电话，其他就只要等就行了。\n②服务器下载nginx 进入阿里云控制台登陆服务器，确保centos有sudo权限，输入sudo -l 确保80端口(http)和443端口(https)没用被占用，如果没有显示任何结果则说明没有被占用\n1 2 sudo netstat -tulpn | grep :80 sudo netstat -tulpn | grep :443 安装nginx/设置开机启动nginx/启动nginx/查看是否启动nginx，按次序在控制台输入如下四句语句\n1 2 3 4 sudo yum install -y nginx sudo systemctl enable nginx sudo systemctl start nginx sudo systemctl status nginx 这几步完成后，在浏览器搜索框输入您的服务器公网IP地址，如果会出现nginx的页面，说明可以导航到您的服务器，即nginx安装成功\n③防火墙设置 为了使外部用户可以访问web服务器，需要开放防火墙，主要是80端口和443端口，可以在服务器的控制台手动设置开启 ④将静态网页上传至服务器 通过hugo命令可以生成一个public文件夹，这就是网页上展示的东西\n现在要做的事情就是把public文件夹里面的内容传送到服务器上，不过需要先在服务器里面建一个public文件夹，我选择建在了home文件夹内\n上传文件我采用的是一种比较笨的方法，利用vscode的插件remote-ssh，用vscode与服务器进行链接，至于remote-ssh的链接方法，就不再赘述，链接成功后将myblog内的所有内容都直接上传至服务器上的public文件夹即可，后续可以在vscode内直接对博客进行编辑，只需要hugo一下就可以直接上传服务器。\n我采用vscode的还有一个原因就是，我不会vim命令，用vscode可以让我使用比较方便\n⑤申请ssl证书 为了让网站更加安全，首先申请一下https的ssl证书，购买了服务器可以免费申领证书，然后下载这个证书。\n我们只需要nginx文件夹里面的私钥对文件，因为在nginx的配置文件里面配置https的时候需要用到，把这两个公秘钥文件上传至服务器的/etc/nginx目录里，因为nginx的配置文件也在这个目录下，方便调用。\n⑥配置nginx的nginx.conf文件 下面是我的配置文件，可以相对应地进行改动即可\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 # 要配置的第一个地方，这里的用户要改成root，不然可能会没有权限 user root; worker_processes auto; error_log /var/log/nginx/error.log; pid /run/nginx.pid; # Load dynamic modules. See /usr/share/doc/nginx/README.dynamic. include /usr/share/nginx/modules/*.conf; events { worker_connections 1024; } http { log_format main \u0026#39;$remote_addr - $remote_user [$time_local] \u0026#34;$request\u0026#34; \u0026#39; \u0026#39;$status $body_bytes_sent \u0026#34;$http_referer\u0026#34; \u0026#39; \u0026#39;\u0026#34;$http_user_agent\u0026#34; \u0026#34;$http_x_forwarded_for\u0026#34;\u0026#39;; access_log /var/log/nginx/access.log main; sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 65; types_hash_max_size 2048; include /etc/nginx/mime.types; default_type application/octet-stream; # Load modular configuration files from the /etc/nginx/conf.d directory. # See http://nginx.org/en/docs/ngx_core_module.html#include # for more information. include /etc/nginx/conf.d/*.conf; server { # 要配置的第二个地方，80访问端口 listen 80 default_server; listen [::]:80 default_server; # 要配置的第三个地方，域名 server_name www.hangzz.cn; rewrite ^(.*) https://$server_name$1 permanent; # 要配置的第四个地方，这里指向public文件夹 root /home/public/public; # Load configuration files for the default server block. include /etc/nginx/default.d/*.conf; # 要配置的第五个地方 location / { root /home/public/public; index index.html index.htm; } # 要配置的第六个地方 error_page 404 /404.html; location = /40x.html { root /home/public/public; } error_page 500 502 503 504 /50x.html; location = /50x.html { } } # Settings for a TLS enabled server. # server { listen 443 ssl; #http2 default_server; # listen [::]:443 ssl http2 default_server; # 要配置的第七个地方 server_name www.hangzz.cn; root /home/public/public; # 要配置的第八个地方 ssl_certificate /etc/nginx/www.hangzz.cn.pem; ssl_certificate_key /etc/nginx/www.hangzz.cn.key; # 要配置的第九个地方 ssl_session_timeout 10m; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; ssl_prefer_server_ciphers on; # ssl_session_cache shared:SSL:1m; # ssl_session_timeout 10m; # ssl_ciphers PROFILE=SYSTEM; # ssl_prefer_server_ciphers on; # Load configuration files for the default server block. # location / { # } # 要配置的第十个地方 error_page 404 /404.html; location = /40x.html { root /home/public/public; } # error_page 500 502 503 504 /50x.html; # location = /50x.html { # } include /etc/nginx/default.d/*.conf; } } 其中端口 80 用于配置 http 服务，端口 443 用于配置 https 服务，这样就完成了nginx 的配置\n修改完成后重新加载配置文件 sudo nginx -s reload\n检查nginx服务的运行情况 sudo systemctl status nginx\n重启nginx服务 sudo systemctl restart nginx\n通过域名访问网站，如果出现博客首页，说明配置成功了，如果域名还没有备案成功，用ip地址访问也可以跳转到博客首页。\n致谢 至此，我的hugo+GitHub/阿里云服务器搭建内容正式结束，当然其中省去了很多内容，主要是我也记不太清，在我搭建过程中也遇到了很多问题困难，都是通过互联网解决的，我写的搭建过程可能比较简略，还请各位看官见谅👉👈希望我的个人经历能给你带来一些正向作用\n在我搭建过程中，Southernwood小朋友给予了我极大的帮助，帮我解决了很多技术上的问题，同时很多问题也都能在Sulv\u0026rsquo;s Blog上面找到解决方法，很感谢互联网的便利性\n","permalink":"https://hangzz0910.github.io/posts/blog/blog/","summary":"我为什么想搭建博客 我也不知道嘿嘿，用Southernwood小朋友的话来说就是“装逼！” 其实很早之前就有想搭自己博客的打算，虽然我不是一个很爱用文字来记录的人，但是互联网总归来说是有记忆的，传至互联网的数据有时候回想起来可能也是一种美好的回忆吧。 除此之外呢，就是室友都在搭建博客，","title":"我的hugo框架博客+GitHub/阿里云服务器搭建历程"},{"content":"\rSouthernwood\r小朋友\rMcola\r小可乐\rBoz\r小包子\r","permalink":"https://hangzz0910.github.io/links/","summary":"Southernwood 小朋友 Mcola 小可乐 Boz 小包子","title":"🤝友链"},{"content":"关于我\n姓名: Hang 职业: 平平无奇双非大二计科 运动: 户外 ","permalink":"https://hangzz0910.github.io/about/","summary":"关于我 姓名: Hang 职业: 平平无奇双非大二计科 运动: 户外","title":"🙋🏻‍♂️关于"}]